# These snippets are based on this great post:
# https://castel.dev/post/lecture-notes-1/
# But heavily modified

global !p

# Basic math zone names
texMathZones = ['texMathZone' + x for x in ['A', 'AS', 'B', 'BS', 'C', 'CS',
'D', 'DS', 'E', 'ES', 'F', 'FS', 'G', 'GS', 'H', 'HS', 'I', 'IS', 'J', 'JS',
'K', 'KS', 'L', 'LS', 'DS', 'V', 'W', 'X', 'Y', 'Z', 'AmsA', 'AmsB', 'AmsC',
'AmsD', 'AmsE', 'AmsF', 'AmsG', 'AmsAS', 'AmsBS', 'AmsCS', 'AmsDS', 'AmsES',
'AmsFS', 'AmsGS' ]]

# Add pandoc latex region (hack for align to work)
texMathZones += ['pandocLaTeXRegion']

texIgnoreMathZones = ['texMathText']
texMathZoneIds = vim.eval('map('+str(texMathZones)+", 'hlID(v:val)')")
texIgnoreMathZoneIds = vim.eval('map('+str(texIgnoreMathZones)+", 'hlID(v:val)')")
ignore = texIgnoreMathZoneIds[0]

def math():
	synstackids = vim.eval("synstack(line('.'), col('.') - (col('.')>=2 ? 1 : 0))")
	try:
		first = next(
            i for i in reversed(synstackids)
            if i in texIgnoreMathZoneIds or i in texMathZoneIds
        )
		return first != ignore
	except StopIteration:
		return False

endglobal

snippet mathdefs "Insert my math definitions" b
`!p
defs_path = os.path.expanduser('~/.pandoc/mathdefs.tex')
with open(defs_path, 'r') as f:
	snip.rv = f.read().strip()
`
endsnippet

snippet disp "Display math" w
$$
$1
.$$
$0
endsnippet

context "not math()"
snippet $ "Math" wA
$${1}$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
	snip.rv = ' '
else:
	snip.rv = ''
`$2
endsnippet

context "math()"
snippet units "Math units" w
\ \mathrm{[${1:${VISUAL:unit}}]}
endsnippet

context "math()"
snippet tra "transposed" wA
\T $0
endsnippet

context "math()"
snippet grad "transposed" wA
\nabla $0
endsnippet

context "math()"
snippet inv "inverse" wA
^{-1} $0
endsnippet

context "math()"
snippet '([^\\])(mat|vec|rvec|rvar)\s?([^\s]+)\s' "matrix/vector macros" rA
`!p
snip.rv = f'{match.group(1)}\\{match.group(2)}{{{match.group(3)}}}'
`$0
endsnippet

context "math()"
snippet '([^\s$]+)(tilde|hat|bar|dot)' "symbols above an expr" rwA
\\`!p snip.rv = f'{match.group(2)}{{{match.group(1)}}}'`$0
endsnippet

context "math()"
snippet frac "Fraction" iA
\frac{${1:${VISUAL}}}{$2}$0
endsnippet

context "math()"
snippet sqrt "Fraction" iA
\sqrt{${1:${VISUAL}}}$0
endsnippet

context "math()"
snippet pderiv "Partial derivative" iA
\pderiv{${1:${VISUAL}}}{$2}$0
endsnippet

context "math()"
snippet __ "subscript" iA
_{$1}$0
endsnippet

context "math()"
snippet ^^ "superscript" iA
^{$1}$0
endsnippet

context "math()"
snippet ** "cdot" iA
\cdot
endsnippet

context "math()"
snippet xx "times" iA
\times 
endsnippet

context "math()"
snippet sum "sum" iA
\sum_{$1}^{$2} $0
endsnippet

context "math()"
snippet ceil "ceil" iA
\left\lceil $1 \right\rceil $0
endsnippet

context "math()"
snippet floor "floor" iA
\left\lfloor $1 \right\rfloor$0
endsnippet

context "math()"
snippet )) "lr()" i
\left(${1:${VISUAL}}\right) $0
endsnippet

context "math()"
snippet ]] "lr[]" i
\left[${1:${VISUAL}}\right] $0
endsnippet

context "math()"
snippet }} "lr{}" i
\left\\{${1:${VISUAL}}\right\\} $0
endsnippet

context "math()"
snippet norm "lr{}" iA
\norm{${1:${VISUAL}}} $0
endsnippet

context "math()"
snippet '(?<!\\)(sin|cos|cot|csc|ln|log|exp)' "math ops" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec)' "inverse math ops" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet '(?<!\\)(alpha|beta|gamma|Gamma|delta|Delta|lambda|Lambda)' "greek 1" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet '(?<!\\)(mu|phi|psi|Phi|Psi|varphi|sigma|Sigma|omega|Omega)' "greek 2" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet '(?<!\\)(pi|Pi|zeta|Zeta|theta|Theta|tau|rho|xi|Xi|kappa|chi)' "greek 3" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet '(?<!\\)(approx|dagger)' "symbols" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

context "math()"
snippet '(?<!\\)(\.|v|c|d)\.\.' "dots" rwA
\\`!p snip.rv = match.group(1).replace('.', '')`dots $0
endsnippet

context "math()"
snippet mcal "mathcal" iA
\mathcal{$1}$0
endsnippet

context "math()"
snippet dint "integral" wA
\int_{${1:-\infty}}^{${2:\infty}} ${3:${VISUAL}} $0
endsnippet

context "math()"
snippet '(p|b|B|v|V)mat' "matrices" rw
`!p
mat_type = f'{match.group(1)}matrix'
snip.rv = '\n' \
f'\\begin{{{mat_type}}}\n' \
'  1 & 2 & 3\\\\ \n' \
'  a & b & c \n' \
f'\\end{{{mat_type}}}'
`$0
endsnippet

context "math()"
snippet cc "subset" Ai
\subset 
endsnippet

snippet notin "not in " iA
\not\in 
endsnippet

context "math()"
snippet inn "in " iA
\in 
endsnippet

context "math()"
snippet OO "emptyset" iA
\O
endsnippet

context "math()"
snippet NN "n" iA
\N
endsnippet

context "math()"
snippet RR "real" iA
\R
endsnippet

context "math()"
snippet QQ "Q" iA
\Q
endsnippet

context "math()"
snippet ZZ "Z" iA
\Z
endsnippet
