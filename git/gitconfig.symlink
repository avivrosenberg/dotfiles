# vim: filetype=gitconfig

[user]
	name = Aviv Rosenberg
	email = aviv.rosenberg@gmail.com
[color]
	ui = true
[push]
	default = current
[core]
	excludesfile = ~/.dotfiles/git/gitignore_global
	autocrlf = input
    editor = vim --nofork
	eol = native
[help]
	format = web

[alias]
    st    = status -sb
    br    = branch
    stat  = status
    co    = checkout
    ct    = commit
    dt    = difftool --dir-diff
    dts   = difftool --dir-diff --staged
    k     = !gitk&
    ka    = !gitk --all&
	fch   = fetch -p origin
    ll    = log --oneline
    rb    = rebase
    rbi   = rebase --interactive

    # remove a submodule in one command
    rmsm  = "!f(){ git rm --cached \"$1\";rm -r \"$1\";git config -f .gitmodules --remove-section \"submodule.$1\";git config -f .git/config --remove-section \"submodule.$1\";git add .gitmodules; }; f"

    # load vim with modified files in buffers (for completion)
    vi    = !vim $(git modified) # run vim with modified modified
    vst   = !vim $(git modified) -c 'Gstatus' -c 'only' #requires vim-fugitive
    vct   = !vim $(git modified) -c 'Gcommit' -c 'only' #requires vim-fugitive

    # Print all modified files (staged, unstaged, untracked), excluding deleted files. In case of rename, take new name.
    modified = !git status --short | sed -En 's/^[ MARCU?]{2}[[:space:]]+//p' | sed -E 's/.*->[[:space:]]+//'

[diff]
	tool = meld
[difftool]
    prompt = false
[difftool "meld"]
    #meld with redirected stdout(1) and stderr(2) to /dev/null
    cmd = meld \
          "$LOCAL" "$REMOTE" > /dev/null 2>&1

[merge]
	tool = meld
[mergetool]
    prompt = false
    keepBackup = false
[mergetool "meld"]
    #meld with 3 tabs and redirected stdout(1) and stderr(2) to /dev/null
    cmd = meld --auto-merge \
        --output="$MERGED" \
        --label="LOCAL" "$LOCAL" \
        --label="BASE" "$BASE" \
        --label="REMOTE" "$REMOTE" > /dev/null 2>&1
[rebase]
	autosquash = true
[rerere]
	enabled = true
[credential]
	helper = cache
